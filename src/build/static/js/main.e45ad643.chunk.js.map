{"version":3,"sources":["apollo/index.ts","apollo/queries/InformeQueries.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GET_INFORMES","gql","Container","styled","div","App","data","useQuery","className","getInformes","map","d","confirmados","href","id","monitoramento","obto_confirmado","obto_descartado","obto_investigacao","recuperados","dia","Date","toLocaleDateString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAOeA,EALA,IAAIC,eAAa,CAC9BC,IAAK,yCACLC,MAAO,IAAIC,kB,gSCFN,IAAMC,EAAeC,cAAH,K,uYCMzB,IAAMC,E,MAAYC,EAAOC,IAAV,KA4FAC,MAhEf,WAA6B,IAAD,EAClBC,EAASC,mBAAuBP,EAAc,CACpDL,WADMW,KAIR,OACE,qBAAKE,UAAU,MAAf,SACE,cAAC,iBAAD,CAAgBb,OAAQA,EAAxB,SACE,cAACO,EAAD,iBAEGI,QAFH,IAEGA,GAFH,UAEGA,EAAMG,mBAFT,aAEG,EAAmBC,KAAI,SAACC,GAAO,IAE5BC,EASED,EATFC,YACAC,EAQEF,EARFE,KACAC,EAOEH,EAPFG,GACAC,EAMEJ,EANFI,cACAC,EAKEL,EALFK,gBACAC,EAIEN,EAJFM,gBACAC,EAGEP,EAHFO,kBACAC,EAEER,EAFFQ,YACAC,EACET,EADFS,IAGF,OACE,gCACE,6BAAK,IAAIC,KAAKD,GAAKE,mBAAmB,WACtC,+BACE,+BACE,4CACCV,KAEH,+BACE,8CACCG,KAEH,+BACE,uDACCC,KAEH,+BACE,sDACCC,KAEH,+BACE,6DACCC,KAEH,+BACE,4CACCC,KAEH,6BACE,mBAAGN,KAAMA,EAAT,6BA5BIC,aC9CTS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.e45ad643.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://congovid.herokuapp.com/graphql\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_INFORMES = gql`\r\n  query GetInformes {\r\n    getInformes {\r\n      id\r\n      confirmados\r\n      obto_descartado\r\n      recuperados\r\n      monitoramento\r\n      obto_investigacao\r\n      obto_confirmado\r\n      dia\r\n      href\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { ApolloProvider, useQuery } from \"@apollo/client\";\nimport client from \"./apollo\";\nimport { InformesType } from \"./apollo/types\";\nimport { GET_INFORMES } from \"./apollo/queries/InformeQueries\";\nimport styled from \"styled-components\";\nimport Chart from \"./components/chart/Chart\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  flex-wrap: wrap;\n\n  div {\n    margin: 10px 20px;\n\n    ul {\n      padding: 0;\n      list-style: none;\n\n      b {\n        margin-right: 10px;\n      }\n    }\n  }\n\n  g {\n    text {\n      tspan {\n        font-size: 6px !important;\n      }\n    }\n  }\n`;\n\nfunction App(): JSX.Element {\n  const { data } = useQuery<InformesType>(GET_INFORMES, {\n    client,\n  });\n\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Container>\n          {/* {data?.getInformes && <Chart data={data?.getInformes} />} */}\n          {data?.getInformes?.map((d) => {\n            const {\n              confirmados,\n              href,\n              id,\n              monitoramento,\n              obto_confirmado,\n              obto_descartado,\n              obto_investigacao,\n              recuperados,\n              dia,\n            } = d;\n\n            return (\n              <div key={id}>\n                <h3>{new Date(dia).toLocaleDateString(\"pt-BR\")}</h3>\n                <ul>\n                  <li>\n                    <b>Confirmados</b>\n                    {confirmados}\n                  </li>\n                  <li>\n                    <b>Monitoramento</b>\n                    {monitoramento}\n                  </li>\n                  <li>\n                    <b>Óbitos confirmados </b>\n                    {obto_confirmado}\n                  </li>\n                  <li>\n                    <b>Óbitos descartados</b>\n                    {obto_descartado}\n                  </li>\n                  <li>\n                    <b>Óbitos investigação</b>\n                    {obto_investigacao}\n                  </li>\n                  <li>\n                    <b>Recuperados</b>\n                    {recuperados}\n                  </li>\n                  <li>\n                    <a href={href}>Link pdf</a>\n                  </li>\n                </ul>\n              </div>\n            );\n          })}\n        </Container>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}