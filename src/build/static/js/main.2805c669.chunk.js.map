{"version":3,"sources":["apollo/index.ts","apollo/queries/InformeQueries.ts","components/chart/Chart2.tsx","components/list/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GET_INFORMES","gql","moment","locale","Container","styled","div","MyChart","informes","slice","reverse","data","React","useMemo","label","map","inf","Date","Number","dia","toLocaleDateString","obto_confirmado","monitoramento","confirmados","series","type","axes","primary","position","stacked","tooltip","className","style","background","color","List","d","href","id","obto_descartado","obto_investigacao","recuperados","App","useQuery","getInformes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2805c669.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://congovid.herokuapp.com/graphql\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_INFORMES = gql`\r\n  query GetInformes {\r\n    getInformes {\r\n      id\r\n      confirmados\r\n      obto_descartado\r\n      recuperados\r\n      monitoramento\r\n      obto_investigacao\r\n      obto_confirmado\r\n      dia\r\n      href\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Chart } from \"react-charts\";\r\nimport moment from \"moment\";\r\nimport { InformeType } from \"../../apollo/types\";\r\nimport styled from \"styled-components\";\r\n\r\nmoment.locale(\"pt-br\");\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  margin: 10px;\r\n\r\n  .legenda {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-weight: 600;\r\n    margin: 10px;\r\n    .box {\r\n      padding: 10px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MyChart({ informes }) {\r\n  informes = informes.slice().reverse();\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        label: \"Mortes\",\r\n        data: informes.map((inf: InformeType) => [\r\n          new Date(Number(inf.dia)).toLocaleDateString(\"pt-BR\"),\r\n          inf.obto_confirmado,\r\n        ]),\r\n      },\r\n      {\r\n        label: \"Monitoramento\",\r\n        data: informes.map((inf: InformeType) => [\r\n          new Date(Number(inf.dia)).toLocaleDateString(\"pt-BR\"),\r\n          inf.monitoramento,\r\n        ]),\r\n      },\r\n      {\r\n        label: \"Casos\",\r\n        data: informes.map((inf: InformeType) => [\r\n          new Date(Number(inf.dia)).toLocaleDateString(\"pt-BR\"),\r\n          inf.confirmados,\r\n        ]),\r\n      },\r\n    ],\r\n    [informes]\r\n  );\r\n\r\n  const series = React.useMemo(\r\n    () => ({\r\n      type: \"area\",\r\n    }),\r\n    []\r\n  );\r\n\r\n  // const axes = React.useMemo(\r\n  //   () => [\r\n  //     { type: \"ordinal\", position: \"left\", primary: true },\r\n  //     { type: \"linear\", stacked: false, position: \"bottom\" },\r\n  //   ],\r\n  //   []\r\n  // );\r\n\r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, position: \"bottom\", type: \"ordinal\" },\r\n      { position: \"left\", type: \"linear\", stacked: false },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Chart data={data} series={series} axes={axes} tooltip />\r\n      <div className=\"legenda\">\r\n        <div className=\"box\" style={{ background: \"#decf3f\", color: \"black\" }}>\r\n          Casos\r\n        </div>\r\n        <div className=\"box\" style={{ background: \"#fc6868\", color: \"white\" }}>\r\n          Monitoramento\r\n        </div>\r\n        <div className=\"box\" style={{ background: \"#77bee6\", color: \"white\" }}>\r\n          Mortes\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyChart;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst List = ({ informes }) => {\r\n  return (\r\n    <Container>\r\n      {informes.map((d) => {\r\n        const {\r\n          confirmados,\r\n          href,\r\n          id,\r\n          monitoramento,\r\n          obto_confirmado,\r\n          obto_descartado,\r\n          obto_investigacao,\r\n          recuperados,\r\n          dia,\r\n        } = d;\r\n\r\n        return (\r\n          <div key={id} className=\"single-informe\">\r\n            <h3>{new Date(Number(dia)).toLocaleDateString(\"pt-BR\")}</h3>\r\n            <ul>\r\n              <li>\r\n                <b>Confirmados</b>\r\n                {confirmados}\r\n              </li>\r\n              <li>\r\n                <b>Monitoramento</b>\r\n                {monitoramento}\r\n              </li>\r\n              <li>\r\n                <b>Óbitos confirmados </b>\r\n                {obto_confirmado}\r\n              </li>\r\n              <li>\r\n                <b>Óbitos descartados</b>\r\n                {obto_descartado}\r\n              </li>\r\n              <li>\r\n                <b>Óbitos investigação</b>\r\n                {obto_investigacao}\r\n              </li>\r\n              <li>\r\n                <b>Recuperados</b>\r\n                {recuperados}\r\n              </li>\r\n              <li>\r\n                <a href={href}>Link pdf</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\nimport { ApolloProvider, useQuery } from \"@apollo/client\";\nimport client from \"./apollo\";\nimport { InformesType } from \"./apollo/types\";\nimport { GET_INFORMES } from \"./apollo/queries/InformeQueries\";\nimport styled from \"styled-components\";\n// import Chart from \"./components/chart/Chart\";\nimport MyChart from \"./components/chart/Chart2\";\nimport List from \"./components/list/List\";\n\nconst Container = styled.div`\n  display: flex;\n  /* width: 100vw; */\n  height: auto;\n  flex-wrap: wrap;\n  overflow-x: hidden;\n\n  div.single-informe {\n    margin: 10px 20px;\n\n    ul {\n      padding: 0;\n      list-style: none;\n\n      b {\n        margin-right: 10px;\n      }\n    }\n  }\n\n  g {\n    text {\n      tspan {\n        font-size: 6px !important;\n      }\n    }\n  }\n`;\n\nfunction App(): JSX.Element {\n  const { data } = useQuery<InformesType>(GET_INFORMES, {\n    client,\n  });\n\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Container>\n          {data?.getInformes && (\n            <>\n              <MyChart informes={data?.getInformes} />\n              <List informes={data?.getInformes} />\n            </>\n          )}\n        </Container>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}